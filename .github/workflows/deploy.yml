name: Deploy Next.js application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "BKASH_API_KEY=${{ secrets.BKASH_API_KEY }}" >> .env
          echo "BKASH_CREATE_PAYMENT_URL=${{ secrets.BKASH_CREATE_PAYMENT_URL }}" >> .env
          echo "BKASH_EXECUTE_PAYMENT_URL=${{ secrets.BKASH_EXECUTE_PAYMENT_URL }}" >> .env
          echo "BKASH_GRANT_TOKEN_URL=${{ secrets.BKASH_GRANT_TOKEN_URL }}" >> .env
          echo "BKASH_PASSWORD=${{ secrets.BKASH_PASSWORD }}" >> .env
          echo "BKASH_REFUND_TRANSACTION_URL=${{ secrets.BKASH_REFUND_TRANSACTION_URL }}" >> .env
          echo "BKASH_SECRET_KEY=${{ secrets.BKASH_SECRET_KEY }}" >> .env
          echo "BKASH_USERNAME=${{ secrets.BKASH_USERNAME }}" >> .env
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
          echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}" >> .env
          echo "SMS_API_KEY=${{ secrets.SMS_API_KEY }}" >> .env
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> .env
          echo "NEXT_PUBLIC_MIKROTIK_LOGIN_DNS_IP=${{ secrets.NEXT_PUBLIC_MIKROTIK_LOGIN_DNS_IP }}" >> .env
          echo "DEVICE_SECRET_KEY=${{ secrets.DEVICE_SECRET_KEY }}" >> .env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env

      - name: Archive .env
        run: tar -czf env.tar.gz .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: prominhaj/wifi-hotspot:latest

      - name: Upload .env file for deployment
        uses: actions/upload-artifact@v4
        with:
          name: env-file
          path: env.tar.gz

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Download .env file
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: .

      - name: Extract .env file
        run: tar -xzf env.tar.gz

      - name: Stop and remove old container if running
        run: |
          docker stop wifi-hotspot-container || true
          docker rm wifi-hotspot-container || true

      - name: Clean up Docker environment
        run: |
          docker image prune -af || true
          docker volume prune -f || true

      - name: Pull latest Docker image
        run: docker pull prominhaj/wifi-hotspot:latest

      - name: Run new Docker container
        run: |
          docker run -d \
            --name wifi-hotspot-container \
            --env-file .env \
            -p 3000:3000 \
            prominhaj/wifi-hotspot:latest
